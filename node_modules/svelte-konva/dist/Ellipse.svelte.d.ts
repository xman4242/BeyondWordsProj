import { SvelteComponentTyped } from "svelte";
/**
     * WARNING: This component is autogenerated using the svelteKonvaComponent.hbs template. Do not edit this file manually!
     */
import Konva from 'konva';
import { type KonvaEvents } from './util/events';
declare const __propDef: {
    props: {
        config: Konva.EllipseConfig;
        handle?: import("konva/lib/shapes/Ellipse").Ellipse | undefined;
        staticConfig?: boolean | undefined;
    };
    slots: {};
    events: KonvaEvents;
};
export type EllipseProps = typeof __propDef.props;
export type EllipseEvents = typeof __propDef.events;
export type EllipseSlots = typeof __propDef.slots;
/**
 * The Ellipse component needs to be placed either inside a svelte-konva Layer or Group component.
 *
 * ### Usage:
 * ```tsx
 * <Ellipse config={{ x: 100, y: 100, radiusX: 50, radiusY: 25, fill: "blue" }} />
 * ```
 *
 * ### Static config:
 * By default svelte-konva will automatically update your config prop on `dragend` and `transformend` events to match the config state (position, rotation, scale, ...) with the internal Konva state.
 * If you additionally bind the config prop your reactive blocks will also be triggered once this happens.
 * There might be cases where this behavior is not beneficial in this case you can disable it by passing the `staticConfig = true` prop to the component.
 *
 * Further information: [Konva API docs](https://konvajs.org/api/Konva.Ellipse.html), [svelte-konva docs](https://konvajs.org/docs/svelte)
 */
export default class Ellipse extends SvelteComponentTyped<EllipseProps, EllipseEvents, EllipseSlots> {
}
export {};
